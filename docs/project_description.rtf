{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid102\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww12600\viewh14500\viewkind0
\deftab720
\pard\pardeftab720\sl600\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 MAX\'a0Software Engineer Evaluation\'a0Project\
\pard\pardeftab720\sl320\partightenfactor0

\b0\fs28 \cf2 The goal here is for us to get a better idea of the way you approach solving problems and the technical skills you possess. We\'92ve tried to make this\'a0project\'a0enjoyable, so have some fun with it!\
Create an application (front-end and backend) that uses a front-end framework (Angular, Backbone, Ember, React \'96 your choice) for the JavaScript to interface with a framework (your choice) backend via a REST API.\
\pard\pardeftab720\sl600\partightenfactor0

\fs40 \cf2 Background\
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 You\'92ve just started a new job as a software engineer at\'a0
\i Artist Client Music Exchange
\i0 \'a0(
\i ACME
\i0 ). The goal of the company is to connect brands (the\'a0
\i client
\i0 ) with musical talent (the\'a0
\i artist
\i0 ).\
\pard\pardeftab720\sl600\partightenfactor0

\fs40 \cf2 Requirements\
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 For your first assignment you\'92ve been tasked with building a Similar Artists Engine for clients to discover artists on Spotify via a web app.\
A user will search for an artist, be shown a list of artists that are potential matches, confirm the artist that we're searching for and then be delivered a list of artists who are similar to the inital artist.\
\pard\pardeftab720\sl480\partightenfactor0

\b\fs32 \cf2 Frontend\
\pard\pardeftab720\sl320\partightenfactor0

\b0\fs28 \cf2 The JavaScript MVC frontend should do the following:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Present a text box to enter an artist to search for\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Have a search button that makes a request to the backend with the artist search term and receive a list of all artists matching the query. For example, consider the user enters the term \'93Queen\'94. They should first be presented with the matching results, such as \'93Queen\'94, \'93Queens of the Stone Age\'94, etc.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Display the artists (artist name, artist image, and popularity score) retrieved from the backend\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Allow the user to click on an artist, which should then call the backend to retrieve a list of similar artists. In the example above, if they then click on the first result (\'93Queen\'94), then they should see a list of artists that have at least one genre in common with \'93Queen\'94; if they click on the second result, say "Queens of the Stone Age", they'll see artists with at least genre in common with that Queens of the Stone Age.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The area below the selected artist should expand to display the related artists\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Think about the user and make it look pretty and easy to use\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\b\fs32 \cf2 \cb3 Backend\
\pard\pardeftab720\sl320\partightenfactor0

\b0\fs28 \cf2 The backend should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Search the Spotify API\'a0
\b by name
\b0 \'a0for the initial artist query\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Persistently store the results of the search (data storage type \'96 your choice)\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl320\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	a.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Be sure to keep track of the genres returned from Spotify as well\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	b.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This should prevent hitting the Spotify API repeatedly for the same searches\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Search the Spotify API\'a0
\b by genre
\b0 \'a0of the selected artist to find artists with genres in common\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Returns the artists in JSON format\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb3 You should make sure the backend has at least the following two endpoints:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls3\ilvl0
\f1 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Artist Search
\f0 \'a0- Returns a list of artists based on the user-specified search term\cb1 \
\ls3\ilvl0
\f1 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Similar Artists
\f0 \'a0- Given an artist\'92s Spotify ID, return similar artists based off of genre\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb3 For example, let\'92s say the user searches for\'a0
\f1 Calvin Harris
\f0 , whose genres are found to be\'a0
\f1 house
\f0 \'a0and\'a0
\f1 edm
\f0 . Those genres should then be used to find artists with the same genres.\
\pard\pardeftab720\sl320\partightenfactor0

\b \cf2 Note
\b0 , we want similar artists to be determined via common\'a0
\b genres
\b0 \'a0and not via Spotify\'92s \'93Related Artists\'94 endpoint.\
When you submit the\'a0project, as an archive (tar, zip, etc.), make sure to include a basic README that will allow us to run your app without any issues.\
}